{"ast":null,"code":"var _jsxFileName = \"/workspaces/MoonDustOdyssey/src/MoonJumperGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MoonJumperGame = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const [score, setScore] = useState(0);\n  const [gameStarted, setGameStarted] = useState(false);\n  const gameRef = useRef({\n    cat: {\n      x: 0,\n      y: 0,\n      vy: 0,\n      r: 30,\n      currentPlatform: 0,\n      isJumping: false\n    },\n    platforms: [],\n    stars: [],\n    moonRotation: 0,\n    gravity: 0.6,\n    jumpForce: -12,\n    animationId: null\n  });\n\n  // Separate effect for initializing the game (runs once)\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n\n    // Set canvas size\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n\n    // Initialize game objects\n    const game = gameRef.current;\n\n    // Create platforms\n    game.platforms = [];\n    for (let i = 0; i < 8; i++) {\n      game.platforms.push({\n        angle: i * (Math.PI / 4),\n        distance: 200\n      });\n    }\n\n    // Create stars\n    game.stars = [];\n    for (let i = 0; i < 50; i++) {\n      game.stars.push({\n        x: (Math.random() - 0.5) * canvas.width,\n        y: (Math.random() - 0.5) * canvas.height,\n        size: Math.random() * 3 + 1,\n        twinkle: Math.random() * Math.PI * 2,\n        speed: Math.random() * 0.02 + 0.01\n      });\n    }\n\n    // Initialize cat position - start on the first platform\n    const firstPlatformAngle = 0;\n    game.cat.x = 200 * Math.cos(firstPlatformAngle);\n    game.cat.y = 200 * Math.sin(firstPlatformAngle);\n    game.cat.vy = 0;\n    game.cat.currentPlatform = 0; // Track which platform the cat is on\n\n    setGameStarted(true);\n  }, []);\n\n  // Separate effect for game loop (runs when game starts)\n  useEffect(() => {\n    if (!gameStarted) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const game = gameRef.current;\n\n    // Game loop\n    function gameLoop() {\n      // Clear canvas\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Draw gradient background\n      const gradient = ctx.createLinearGradient(0, 0, 0, canvas.height);\n      gradient.addColorStop(0, 'rgb(25, 25, 60)');\n      gradient.addColorStop(1, 'rgb(10, 10, 25)');\n      ctx.fillStyle = gradient;\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n      // Center coordinate system\n      ctx.save();\n      ctx.translate(canvas.width / 2, canvas.height / 2);\n\n      // Draw twinkling stars\n      game.stars.forEach(star => {\n        star.twinkle += star.speed;\n        const alpha = (Math.sin(star.twinkle) + 1) / 2 * 0.8 + 0.2;\n        const size = star.size * (1 + Math.sin(star.twinkle * 2) * 0.3);\n        ctx.save();\n        ctx.globalAlpha = alpha;\n        ctx.shadowColor = `rgba(255, 255, 200, ${alpha * 0.8})`;\n        ctx.shadowBlur = size * 3;\n        ctx.font = `${size * 8}px Arial`;\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        ctx.fillText('⭐', star.x, star.y);\n        ctx.restore();\n        ctx.shadowBlur = 0;\n      });\n\n      // Draw animated moon\n      const moonScale = 1 + Math.sin(Date.now() * 0.001) * 0.1;\n      const moonGlow = (Math.sin(Date.now() * 0.002) + 1) / 2 * 0.5 + 0.5;\n      ctx.save();\n      ctx.scale(moonScale, moonScale);\n      ctx.shadowColor = `rgba(255, 255, 150, ${moonGlow})`;\n      ctx.shadowBlur = 30;\n      ctx.fillStyle = '#FFF8DC';\n      ctx.font = '60px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText('🌙', 0, 0);\n      ctx.restore();\n\n      // Draw rotating platforms\n      ctx.save();\n      ctx.rotate(game.moonRotation);\n      game.platforms.forEach(platform => {\n        const x = platform.distance * Math.cos(platform.angle);\n        const y = platform.distance * Math.sin(platform.angle);\n        ctx.fillStyle = 'rgba(200, 200, 255, 0.8)';\n        ctx.strokeStyle = 'rgba(255, 255, 255, 0.6)';\n        ctx.lineWidth = 2;\n        ctx.beginPath();\n        ctx.ellipse(x, y, 20, 5, 0, 0, Math.PI * 2);\n        ctx.fill();\n        ctx.stroke();\n      });\n      ctx.restore();\n\n      // Update and draw cat\n      const cat = game.cat;\n      cat.vy += game.gravity;\n      cat.y += cat.vy;\n\n      // Check if cat fell\n      if (cat.y > canvas.height / 2) {\n        cat.y = 0;\n        cat.vy = 0;\n        setScore(0);\n      }\n\n      // Draw cat\n      ctx.fillStyle = '#38BDF8';\n      ctx.beginPath();\n      ctx.arc(cat.x, cat.y, cat.r / 2, 0, Math.PI * 2);\n      ctx.fill();\n\n      // Cat eyes\n      ctx.fillStyle = 'black';\n      ctx.beginPath();\n      ctx.arc(cat.x - 5, cat.y - 5, 2, 0, Math.PI * 2);\n      ctx.fill();\n      ctx.beginPath();\n      ctx.arc(cat.x + 5, cat.y - 5, 2, 0, Math.PI * 2);\n      ctx.fill();\n\n      // Update rotation\n      game.moonRotation += 0.002 + score * 0.0001;\n      ctx.restore();\n      game.animationId = requestAnimationFrame(gameLoop);\n    }\n\n    // Check if cat is on platform\n    function isOnPlatform() {\n      const cat = game.cat;\n      for (let platform of game.platforms) {\n        const px = platform.distance * Math.cos(platform.angle + game.moonRotation);\n        const py = platform.distance * Math.sin(platform.angle + game.moonRotation);\n        const dist = Math.sqrt((cat.x - px) ** 2 + (cat.y + cat.r / 2 - py) ** 2);\n        if (dist < cat.r && cat.vy >= 0) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    // Jump function\n    function jump() {\n      if (isOnPlatform()) {\n        game.cat.vy = game.jumpForce;\n        setScore(prev => prev + 1);\n      }\n    }\n\n    // Start game\n    gameLoop();\n\n    // Cleanup\n    return () => {\n      if (game.animationId) {\n        cancelAnimationFrame(game.animationId);\n      }\n    };\n  }, [gameStarted, score]);\n\n  // Separate effect for event handling\n  useEffect(() => {\n    if (!gameStarted) return;\n    const game = gameRef.current;\n\n    // Jump function\n    function jump() {\n      // Check if cat is on platform\n      const cat = game.cat;\n      for (let platform of game.platforms) {\n        const px = platform.distance * Math.cos(platform.angle + game.moonRotation);\n        const py = platform.distance * Math.sin(platform.angle + game.moonRotation);\n        const dist = Math.sqrt((cat.x - px) ** 2 + (cat.y + cat.r / 2 - py) ** 2);\n\n        // More generous collision detection\n        if (dist < cat.r * 1.5 && cat.vy >= 0) {\n          game.cat.vy = game.jumpForce;\n          setScore(prev => prev + 1);\n          return;\n        }\n      }\n    }\n\n    // Event listeners\n    function handleKeyDown(e) {\n      if (e.code === 'Space' || e.code === 'ArrowUp') {\n        e.preventDefault();\n        jump();\n      }\n    }\n    function handleClick(e) {\n      e.preventDefault();\n      jump();\n    }\n    window.addEventListener('keydown', handleKeyDown);\n    window.addEventListener('click', handleClick);\n\n    // Cleanup\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n      window.removeEventListener('click', handleClick);\n    };\n  }, [gameStarted]);\n  const gameContainerStyle = {\n    position: 'relative',\n    width: '100vw',\n    height: '100vh',\n    background: 'linear-gradient(135deg, #1a1a3a 0%, #0f0f1f 100%)',\n    overflow: 'hidden',\n    fontFamily: 'Arial, sans-serif'\n  };\n  const canvasStyle = {\n    display: 'block',\n    cursor: 'pointer'\n  };\n  const scoreStyle = {\n    position: 'absolute',\n    top: '20px',\n    left: '20px',\n    color: '#fff8aa',\n    fontSize: '24px',\n    fontWeight: 'bold',\n    zIndex: 10\n  };\n  const instructionsStyle = {\n    position: 'absolute',\n    bottom: '20px',\n    left: '50%',\n    transform: 'translateX(-50%)',\n    color: 'white',\n    textAlign: 'center',\n    fontSize: '16px'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: gameContainerStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: canvasStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: scoreStyle,\n      children: [\"Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: instructionsStyle,\n      children: \"Press SPACEBAR, \\u2191 or CLICK to jump!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 294,\n    columnNumber: 9\n  }, this);\n};\n_s(MoonJumperGame, \"EEnRNd15JF3UKpBHQiocvRrtKM0=\");\n_c = MoonJumperGame;\nexport default MoonJumperGame;\nvar _c;\n$RefreshReg$(_c, \"MoonJumperGame\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","MoonJumperGame","_s","canvasRef","score","setScore","gameStarted","setGameStarted","gameRef","cat","x","y","vy","r","currentPlatform","isJumping","platforms","stars","moonRotation","gravity","jumpForce","animationId","canvas","current","ctx","getContext","width","window","innerWidth","height","innerHeight","game","i","push","angle","Math","PI","distance","random","size","twinkle","speed","firstPlatformAngle","cos","sin","gameLoop","clearRect","gradient","createLinearGradient","addColorStop","fillStyle","fillRect","save","translate","forEach","star","alpha","globalAlpha","shadowColor","shadowBlur","font","textAlign","textBaseline","fillText","restore","moonScale","Date","now","moonGlow","scale","rotate","platform","strokeStyle","lineWidth","beginPath","ellipse","fill","stroke","arc","requestAnimationFrame","isOnPlatform","px","py","dist","sqrt","jump","prev","cancelAnimationFrame","handleKeyDown","e","code","preventDefault","handleClick","addEventListener","removeEventListener","gameContainerStyle","position","background","overflow","fontFamily","canvasStyle","display","cursor","scoreStyle","top","left","color","fontSize","fontWeight","zIndex","instructionsStyle","bottom","transform","style","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/workspaces/MoonDustOdyssey/src/MoonJumperGame.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nconst MoonJumperGame = () => {\n    const canvasRef = useRef(null);\n    const [score, setScore] = useState(0);\n    const [gameStarted, setGameStarted] = useState(false);\n    const gameRef = useRef({\n        cat: { x: 0, y: 0, vy: 0, r: 30, currentPlatform: 0, isJumping: false },\n        platforms: [],\n        stars: [],\n        moonRotation: 0,\n        gravity: 0.6,\n        jumpForce: -12,\n        animationId: null\n    });\n\n    // Separate effect for initializing the game (runs once)\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        if (!canvas) return;\n        \n        const ctx = canvas.getContext('2d');\n        \n        // Set canvas size\n        canvas.width = window.innerWidth;\n        canvas.height = window.innerHeight;\n        \n        // Initialize game objects\n        const game = gameRef.current;\n        \n        // Create platforms\n        game.platforms = [];\n        for (let i = 0; i < 8; i++) {\n            game.platforms.push({\n                angle: i * (Math.PI / 4),\n                distance: 200\n            });\n        }\n        \n        // Create stars\n        game.stars = [];\n        for (let i = 0; i < 50; i++) {\n            game.stars.push({\n                x: (Math.random() - 0.5) * canvas.width,\n                y: (Math.random() - 0.5) * canvas.height,\n                size: Math.random() * 3 + 1,\n                twinkle: Math.random() * Math.PI * 2,\n                speed: Math.random() * 0.02 + 0.01\n            });\n        }\n\n        // Initialize cat position - start on the first platform\n        const firstPlatformAngle = 0;\n        game.cat.x = 200 * Math.cos(firstPlatformAngle);\n        game.cat.y = 200 * Math.sin(firstPlatformAngle);\n        game.cat.vy = 0;\n        game.cat.currentPlatform = 0; // Track which platform the cat is on\n        \n        setGameStarted(true);\n    }, []);\n\n    // Separate effect for game loop (runs when game starts)\n    useEffect(() => {\n        if (!gameStarted) return;\n        \n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        const game = gameRef.current;\n        \n        \n        // Game loop\n        function gameLoop() {\n            // Clear canvas\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n            \n            // Draw gradient background\n            const gradient = ctx.createLinearGradient(0, 0, 0, canvas.height);\n            gradient.addColorStop(0, 'rgb(25, 25, 60)');\n            gradient.addColorStop(1, 'rgb(10, 10, 25)');\n            ctx.fillStyle = gradient;\n            ctx.fillRect(0, 0, canvas.width, canvas.height);\n            \n            // Center coordinate system\n            ctx.save();\n            ctx.translate(canvas.width / 2, canvas.height / 2);\n            \n            // Draw twinkling stars\n            game.stars.forEach(star => {\n                star.twinkle += star.speed;\n                const alpha = (Math.sin(star.twinkle) + 1) / 2 * 0.8 + 0.2;\n                const size = star.size * (1 + Math.sin(star.twinkle * 2) * 0.3);\n                \n                ctx.save();\n                ctx.globalAlpha = alpha;\n                ctx.shadowColor = `rgba(255, 255, 200, ${alpha * 0.8})`;\n                ctx.shadowBlur = size * 3;\n                \n                ctx.font = `${size * 8}px Arial`;\n                ctx.textAlign = 'center';\n                ctx.textBaseline = 'middle';\n                ctx.fillText('⭐', star.x, star.y);\n                \n                ctx.restore();\n                ctx.shadowBlur = 0;\n            });\n            \n            // Draw animated moon\n            const moonScale = 1 + Math.sin(Date.now() * 0.001) * 0.1;\n            const moonGlow = (Math.sin(Date.now() * 0.002) + 1) / 2 * 0.5 + 0.5;\n            \n            ctx.save();\n            ctx.scale(moonScale, moonScale);\n            ctx.shadowColor = `rgba(255, 255, 150, ${moonGlow})`;\n            ctx.shadowBlur = 30;\n            ctx.fillStyle = '#FFF8DC';\n            ctx.font = '60px Arial';\n            ctx.textAlign = 'center';\n            ctx.fillText('🌙', 0, 0);\n            ctx.restore();\n            \n            // Draw rotating platforms\n            ctx.save();\n            ctx.rotate(game.moonRotation);\n            \n            game.platforms.forEach(platform => {\n                const x = platform.distance * Math.cos(platform.angle);\n                const y = platform.distance * Math.sin(platform.angle);\n                \n                ctx.fillStyle = 'rgba(200, 200, 255, 0.8)';\n                ctx.strokeStyle = 'rgba(255, 255, 255, 0.6)';\n                ctx.lineWidth = 2;\n                \n                ctx.beginPath();\n                ctx.ellipse(x, y, 20, 5, 0, 0, Math.PI * 2);\n                ctx.fill();\n                ctx.stroke();\n            });\n            \n            ctx.restore();\n            \n            // Update and draw cat\n            const cat = game.cat;\n            cat.vy += game.gravity;\n            cat.y += cat.vy;\n            \n            // Check if cat fell\n            if (cat.y > canvas.height / 2) {\n                cat.y = 0;\n                cat.vy = 0;\n                setScore(0);\n            }\n            \n            // Draw cat\n            ctx.fillStyle = '#38BDF8';\n            ctx.beginPath();\n            ctx.arc(cat.x, cat.y, cat.r / 2, 0, Math.PI * 2);\n            ctx.fill();\n            \n            // Cat eyes\n            ctx.fillStyle = 'black';\n            ctx.beginPath();\n            ctx.arc(cat.x - 5, cat.y - 5, 2, 0, Math.PI * 2);\n            ctx.fill();\n            ctx.beginPath();\n            ctx.arc(cat.x + 5, cat.y - 5, 2, 0, Math.PI * 2);\n            ctx.fill();\n            \n            // Update rotation\n            game.moonRotation += 0.002 + score * 0.0001;\n            \n            ctx.restore();\n            \n            game.animationId = requestAnimationFrame(gameLoop);\n        }\n        \n        // Check if cat is on platform\n        function isOnPlatform() {\n            const cat = game.cat;\n            \n            for (let platform of game.platforms) {\n                const px = platform.distance * Math.cos(platform.angle + game.moonRotation);\n                const py = platform.distance * Math.sin(platform.angle + game.moonRotation);\n                const dist = Math.sqrt((cat.x - px) ** 2 + ((cat.y + cat.r / 2) - py) ** 2);\n                \n                if (dist < cat.r && cat.vy >= 0) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        \n        // Jump function\n        function jump() {\n            if (isOnPlatform()) {\n                game.cat.vy = game.jumpForce;\n                setScore(prev => prev + 1);\n            }\n        }\n        \n        // Start game\n        gameLoop();\n        \n        // Cleanup\n        return () => {\n            if (game.animationId) {\n                cancelAnimationFrame(game.animationId);\n            }\n        };\n    }, [gameStarted, score]);\n\n    // Separate effect for event handling\n    useEffect(() => {\n        if (!gameStarted) return;\n        \n        const game = gameRef.current;\n        \n        // Jump function\n        function jump() {\n            // Check if cat is on platform\n            const cat = game.cat;\n            \n            for (let platform of game.platforms) {\n                const px = platform.distance * Math.cos(platform.angle + game.moonRotation);\n                const py = platform.distance * Math.sin(platform.angle + game.moonRotation);\n                const dist = Math.sqrt((cat.x - px) ** 2 + ((cat.y + cat.r / 2) - py) ** 2);\n                \n                // More generous collision detection\n                if (dist < cat.r * 1.5 && cat.vy >= 0) {\n                    game.cat.vy = game.jumpForce;\n                    setScore(prev => prev + 1);\n                    return;\n                }\n            }\n        }\n        \n        // Event listeners\n        function handleKeyDown(e) {\n            if (e.code === 'Space' || e.code === 'ArrowUp') {\n                e.preventDefault();\n                jump();\n            }\n        }\n        \n        function handleClick(e) {\n            e.preventDefault();\n            jump();\n        }\n        \n        window.addEventListener('keydown', handleKeyDown);\n        window.addEventListener('click', handleClick);\n        \n        // Cleanup\n        return () => {\n            window.removeEventListener('keydown', handleKeyDown);\n            window.removeEventListener('click', handleClick);\n        };\n    }, [gameStarted]);\n\n    const gameContainerStyle = {\n        position: 'relative',\n        width: '100vw',\n        height: '100vh',\n        background: 'linear-gradient(135deg, #1a1a3a 0%, #0f0f1f 100%)',\n        overflow: 'hidden',\n        fontFamily: 'Arial, sans-serif'\n    };\n\n    const canvasStyle = {\n        display: 'block',\n        cursor: 'pointer'\n    };\n\n    const scoreStyle = {\n        position: 'absolute',\n        top: '20px',\n        left: '20px',\n        color: '#fff8aa',\n        fontSize: '24px',\n        fontWeight: 'bold',\n        zIndex: 10\n    };\n\n    const instructionsStyle = {\n        position: 'absolute',\n        bottom: '20px',\n        left: '50%',\n        transform: 'translateX(-50%)',\n        color: 'white',\n        textAlign: 'center',\n        fontSize: '16px'\n    };\n\n    return (\n        <div style={gameContainerStyle}>\n            <canvas ref={canvasRef} style={canvasStyle} />\n            <div style={scoreStyle}>Score: {score}</div>\n            <div style={instructionsStyle}>\n                Press SPACEBAR, ↑ or CLICK to jump!\n            </div>\n        </div>\n    );\n};\n\nexport default MoonJumperGame;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}