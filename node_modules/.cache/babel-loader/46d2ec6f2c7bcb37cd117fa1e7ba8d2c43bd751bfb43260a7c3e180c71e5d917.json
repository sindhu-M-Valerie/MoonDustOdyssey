{"ast":null,"code":"var _jsxFileName = \"/workspaces/MoonDustOdyssey/src/MoonJumperGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MoonJumperGame = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const [score, setScore] = useState(0);\n  const gameRef = useRef({\n    cat: {\n      x: 0,\n      y: 0,\n      vy: 0,\n      r: 30\n    },\n    platforms: [],\n    stars: [],\n    moonRotation: 0,\n    gravity: 0.6,\n    jumpForce: -10\n  });\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // Set canvas size\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n\n    // Initialize game objects\n    const game = gameRef.current;\n\n    // Create platforms\n    game.platforms = [];\n    for (let i = 0; i < 8; i++) {\n      game.platforms.push({\n        angle: i * (Math.PI / 4),\n        distance: 200\n      });\n    }\n\n    // Create stars\n    game.stars = [];\n    for (let i = 0; i < 50; i++) {\n      game.stars.push({\n        x: (Math.random() - 0.5) * canvas.width,\n        y: (Math.random() - 0.5) * canvas.height,\n        size: Math.random() * 3 + 1,\n        twinkle: Math.random() * Math.PI * 2,\n        speed: Math.random() * 0.02 + 0.01\n      });\n    }\n\n    // Game loop\n    function gameLoop() {\n      // Clear canvas\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Draw gradient background\n      const gradient = ctx.createLinearGradient(0, 0, 0, canvas.height);\n      gradient.addColorStop(0, 'rgb(25, 25, 60)');\n      gradient.addColorStop(1, 'rgb(10, 10, 25)');\n      ctx.fillStyle = gradient;\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n      // Center coordinate system\n      ctx.save();\n      ctx.translate(canvas.width / 2, canvas.height / 2);\n\n      // Draw twinkling stars\n      game.stars.forEach(star => {\n        star.twinkle += star.speed;\n        const alpha = (Math.sin(star.twinkle) + 1) / 2 * 0.8 + 0.2;\n        ctx.fillStyle = `rgba(255, 255, 200, ${alpha})`;\n        ctx.font = `${star.size * 6}px Arial`;\n        ctx.textAlign = 'center';\n        ctx.fillText('⭐', star.x, star.y);\n      });\n\n      // Draw moon\n      ctx.font = '60px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText('🌙', 0, 0);\n\n      // Draw rotating platforms\n      ctx.save();\n      ctx.rotate(game.moonRotation);\n      game.platforms.forEach(platform => {\n        const x = platform.distance * Math.cos(platform.angle);\n        const y = platform.distance * Math.sin(platform.angle);\n        ctx.fillStyle = 'rgba(200, 200, 255, 0.8)';\n        ctx.strokeStyle = 'rgba(255, 255, 255, 0.6)';\n        ctx.lineWidth = 2;\n        ctx.beginPath();\n        ctx.ellipse(x, y, 20, 5, 0, 0, Math.PI * 2);\n        ctx.fill();\n        ctx.stroke();\n      });\n      ctx.restore();\n\n      // Update and draw cat\n      const cat = game.cat;\n      cat.vy += game.gravity;\n      cat.y += cat.vy;\n\n      // Check if cat fell\n      if (cat.y > canvas.height / 2) {\n        cat.y = 0;\n        cat.vy = 0;\n        setScore(0);\n      }\n\n      // Draw cat\n      ctx.fillStyle = '#38BDF8';\n      ctx.beginPath();\n      ctx.arc(cat.x, cat.y, cat.r / 2, 0, Math.PI * 2);\n      ctx.fill();\n\n      // Cat eyes\n      ctx.fillStyle = 'black';\n      ctx.beginPath();\n      ctx.arc(cat.x - 5, cat.y - 5, 2, 0, Math.PI * 2);\n      ctx.fill();\n      ctx.beginPath();\n      ctx.arc(cat.x + 5, cat.y - 5, 2, 0, Math.PI * 2);\n      ctx.fill();\n\n      // Update rotation\n      game.moonRotation += 0.002 + score * 0.0001;\n      ctx.restore();\n      requestAnimationFrame(gameLoop);\n    }\n\n    // Check if cat is on platform\n    function isOnPlatform() {\n      const cat = game.cat;\n      for (let platform of game.platforms) {\n        const px = platform.distance * Math.cos(platform.angle + game.moonRotation);\n        const py = platform.distance * Math.sin(platform.angle + game.moonRotation);\n        const dist = Math.sqrt((cat.x - px) ** 2 + (cat.y + cat.r / 2 - py) ** 2);\n        if (dist < cat.r && cat.vy >= 0) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    // Jump function\n    function jump() {\n      if (isOnPlatform()) {\n        game.cat.vy = game.jumpForce;\n        setScore(prev => prev + 1);\n      }\n    }\n\n    // Event listeners\n    function handleKeyDown(e) {\n      if (e.code === 'Space' || e.code === 'ArrowUp') {\n        e.preventDefault();\n        jump();\n      }\n    }\n    function handleClick() {\n      jump();\n    }\n    window.addEventListener('keydown', handleKeyDown);\n    canvas.addEventListener('click', handleClick);\n\n    // Start game\n    gameLoop();\n\n    // Cleanup\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n      canvas.removeEventListener('click', handleClick);\n    };\n  }, [score]);\n  const gameContainerStyle = {\n    position: 'relative',\n    width: '100vw',\n    height: '100vh',\n    background: 'linear-gradient(135deg, #1a1a3a 0%, #0f0f1f 100%)',\n    overflow: 'hidden',\n    fontFamily: 'Arial, sans-serif'\n  };\n  const canvasStyle = {\n    display: 'block',\n    cursor: 'pointer'\n  };\n  const scoreStyle = {\n    position: 'absolute',\n    top: '20px',\n    left: '20px',\n    color: '#fff8aa',\n    fontSize: '24px',\n    fontWeight: 'bold',\n    zIndex: 10\n  };\n  const instructionsStyle = {\n    position: 'absolute',\n    bottom: '20px',\n    left: '50%',\n    transform: 'translateX(-50%)',\n    color: 'white',\n    textAlign: 'center',\n    fontSize: '16px'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: gameContainerStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: canvasStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: scoreStyle,\n      children: [\"Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: instructionsStyle,\n      children: \"Press SPACEBAR, \\u2191 or CLICK to jump!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 9\n  }, this);\n};\n_s(MoonJumperGame, \"W8t6SXVpgvO8WTxWe5vZNSHIHss=\");\n_c = MoonJumperGame;\nexport default MoonJumperGame;\nvar _c;\n$RefreshReg$(_c, \"MoonJumperGame\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","MoonJumperGame","_s","canvasRef","score","setScore","gameRef","cat","x","y","vy","r","platforms","stars","moonRotation","gravity","jumpForce","canvas","current","ctx","getContext","width","window","innerWidth","height","innerHeight","game","i","push","angle","Math","PI","distance","random","size","twinkle","speed","gameLoop","clearRect","gradient","createLinearGradient","addColorStop","fillStyle","fillRect","save","translate","forEach","star","alpha","sin","font","textAlign","fillText","rotate","platform","cos","strokeStyle","lineWidth","beginPath","ellipse","fill","stroke","restore","arc","requestAnimationFrame","isOnPlatform","px","py","dist","sqrt","jump","prev","handleKeyDown","e","code","preventDefault","handleClick","addEventListener","removeEventListener","gameContainerStyle","position","background","overflow","fontFamily","canvasStyle","display","cursor","scoreStyle","top","left","color","fontSize","fontWeight","zIndex","instructionsStyle","bottom","transform","style","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/workspaces/MoonDustOdyssey/src/MoonJumperGame.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nconst MoonJumperGame = () => {\n    const canvasRef = useRef(null);\n    const [score, setScore] = useState(0);\n    const gameRef = useRef({\n        cat: { x: 0, y: 0, vy: 0, r: 30 },\n        platforms: [],\n        stars: [],\n        moonRotation: 0,\n        gravity: 0.6,\n        jumpForce: -10\n    });\n\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        \n        // Set canvas size\n        canvas.width = window.innerWidth;\n        canvas.height = window.innerHeight;\n        \n        // Initialize game objects\n        const game = gameRef.current;\n        \n        // Create platforms\n        game.platforms = [];\n        for (let i = 0; i < 8; i++) {\n            game.platforms.push({\n                angle: i * (Math.PI / 4),\n                distance: 200\n            });\n        }\n        \n        // Create stars\n        game.stars = [];\n        for (let i = 0; i < 50; i++) {\n            game.stars.push({\n                x: (Math.random() - 0.5) * canvas.width,\n                y: (Math.random() - 0.5) * canvas.height,\n                size: Math.random() * 3 + 1,\n                twinkle: Math.random() * Math.PI * 2,\n                speed: Math.random() * 0.02 + 0.01\n            });\n        }\n        \n        // Game loop\n        function gameLoop() {\n            // Clear canvas\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n            \n            // Draw gradient background\n            const gradient = ctx.createLinearGradient(0, 0, 0, canvas.height);\n            gradient.addColorStop(0, 'rgb(25, 25, 60)');\n            gradient.addColorStop(1, 'rgb(10, 10, 25)');\n            ctx.fillStyle = gradient;\n            ctx.fillRect(0, 0, canvas.width, canvas.height);\n            \n            // Center coordinate system\n            ctx.save();\n            ctx.translate(canvas.width / 2, canvas.height / 2);\n            \n            // Draw twinkling stars\n            game.stars.forEach(star => {\n                star.twinkle += star.speed;\n                const alpha = (Math.sin(star.twinkle) + 1) / 2 * 0.8 + 0.2;\n                \n                ctx.fillStyle = `rgba(255, 255, 200, ${alpha})`;\n                ctx.font = `${star.size * 6}px Arial`;\n                ctx.textAlign = 'center';\n                ctx.fillText('⭐', star.x, star.y);\n            });\n            \n            // Draw moon\n            ctx.font = '60px Arial';\n            ctx.textAlign = 'center';\n            ctx.fillText('🌙', 0, 0);\n            \n            // Draw rotating platforms\n            ctx.save();\n            ctx.rotate(game.moonRotation);\n            \n            game.platforms.forEach(platform => {\n                const x = platform.distance * Math.cos(platform.angle);\n                const y = platform.distance * Math.sin(platform.angle);\n                \n                ctx.fillStyle = 'rgba(200, 200, 255, 0.8)';\n                ctx.strokeStyle = 'rgba(255, 255, 255, 0.6)';\n                ctx.lineWidth = 2;\n                \n                ctx.beginPath();\n                ctx.ellipse(x, y, 20, 5, 0, 0, Math.PI * 2);\n                ctx.fill();\n                ctx.stroke();\n            });\n            \n            ctx.restore();\n            \n            // Update and draw cat\n            const cat = game.cat;\n            cat.vy += game.gravity;\n            cat.y += cat.vy;\n            \n            // Check if cat fell\n            if (cat.y > canvas.height / 2) {\n                cat.y = 0;\n                cat.vy = 0;\n                setScore(0);\n            }\n            \n            // Draw cat\n            ctx.fillStyle = '#38BDF8';\n            ctx.beginPath();\n            ctx.arc(cat.x, cat.y, cat.r / 2, 0, Math.PI * 2);\n            ctx.fill();\n            \n            // Cat eyes\n            ctx.fillStyle = 'black';\n            ctx.beginPath();\n            ctx.arc(cat.x - 5, cat.y - 5, 2, 0, Math.PI * 2);\n            ctx.fill();\n            ctx.beginPath();\n            ctx.arc(cat.x + 5, cat.y - 5, 2, 0, Math.PI * 2);\n            ctx.fill();\n            \n            // Update rotation\n            game.moonRotation += 0.002 + score * 0.0001;\n            \n            ctx.restore();\n            \n            requestAnimationFrame(gameLoop);\n        }\n        \n        // Check if cat is on platform\n        function isOnPlatform() {\n            const cat = game.cat;\n            \n            for (let platform of game.platforms) {\n                const px = platform.distance * Math.cos(platform.angle + game.moonRotation);\n                const py = platform.distance * Math.sin(platform.angle + game.moonRotation);\n                const dist = Math.sqrt((cat.x - px) ** 2 + ((cat.y + cat.r / 2) - py) ** 2);\n                \n                if (dist < cat.r && cat.vy >= 0) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        \n        // Jump function\n        function jump() {\n            if (isOnPlatform()) {\n                game.cat.vy = game.jumpForce;\n                setScore(prev => prev + 1);\n            }\n        }\n        \n        // Event listeners\n        function handleKeyDown(e) {\n            if (e.code === 'Space' || e.code === 'ArrowUp') {\n                e.preventDefault();\n                jump();\n            }\n        }\n        \n        function handleClick() {\n            jump();\n        }\n        \n        window.addEventListener('keydown', handleKeyDown);\n        canvas.addEventListener('click', handleClick);\n        \n        // Start game\n        gameLoop();\n        \n        // Cleanup\n        return () => {\n            window.removeEventListener('keydown', handleKeyDown);\n            canvas.removeEventListener('click', handleClick);\n        };\n    }, [score]);\n\n    const gameContainerStyle = {\n        position: 'relative',\n        width: '100vw',\n        height: '100vh',\n        background: 'linear-gradient(135deg, #1a1a3a 0%, #0f0f1f 100%)',\n        overflow: 'hidden',\n        fontFamily: 'Arial, sans-serif'\n    };\n\n    const canvasStyle = {\n        display: 'block',\n        cursor: 'pointer'\n    };\n\n    const scoreStyle = {\n        position: 'absolute',\n        top: '20px',\n        left: '20px',\n        color: '#fff8aa',\n        fontSize: '24px',\n        fontWeight: 'bold',\n        zIndex: 10\n    };\n\n    const instructionsStyle = {\n        position: 'absolute',\n        bottom: '20px',\n        left: '50%',\n        transform: 'translateX(-50%)',\n        color: 'white',\n        textAlign: 'center',\n        fontSize: '16px'\n    };\n\n    return (\n        <div style={gameContainerStyle}>\n            <canvas ref={canvasRef} style={canvasStyle} />\n            <div style={scoreStyle}>Score: {score}</div>\n            <div style={instructionsStyle}>\n                Press SPACEBAR, ↑ or CLICK to jump!\n            </div>\n        </div>\n    );\n};\n\nexport default MoonJumperGame;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}