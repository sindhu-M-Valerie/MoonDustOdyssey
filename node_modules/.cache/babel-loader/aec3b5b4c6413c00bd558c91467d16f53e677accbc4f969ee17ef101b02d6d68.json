{"ast":null,"code":"var _jsxFileName = \"/workspaces/MoonDustOdyssey/src/MoonJumperGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MoonJumperGame = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const [score, setScore] = useState(0);\n  const [gameStarted, setGameStarted] = useState(false);\n  const gameRef = useRef({\n    ball: {\n      angle: 0,\n      // Angle on moon surface\n      distance: 140,\n      // Distance from moon center (decreased by half from 280 to 140)\n      x: 0,\n      y: 0,\n      // Cartesian coordinates\n      vx: 0,\n      vy: 0,\n      // Velocity when jumping\n      r: 30,\n      // Radius\n      isOnMoon: true // Whether ball is on moon surface\n    },\n    platforms: [],\n    stars: [],\n    moonRotation: 0,\n    gravity: 0.4,\n    jumpForce: 8,\n    animationId: null\n  });\n\n  // Separate effect for initializing the game (runs once)\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n\n    // Set canvas size\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n\n    // Initialize game objects\n    const game = gameRef.current;\n\n    // Create platforms\n    game.platforms = [];\n    for (let i = 0; i < 8; i++) {\n      game.platforms.push({\n        angle: i * (Math.PI / 4),\n        distance: 280 // Increased by 2 times from 140 to 280\n      });\n    }\n\n    // Create stars and sparkles\n    game.stars = [];\n    for (let i = 0; i < 25; i++) {\n      game.stars.push({\n        x: (Math.random() - 0.5) * canvas.width,\n        y: (Math.random() - 0.5) * canvas.height,\n        size: Math.random() * 1.5 + 0.5,\n        // Smaller stars\n        twinkle: Math.random() * Math.PI * 2,\n        speed: Math.random() * 0.02 + 0.01,\n        moveX: (Math.random() - 0.5) * 0.8,\n        // Increased random movement\n        moveY: (Math.random() - 0.5) * 0.8,\n        wanderAngle: Math.random() * Math.PI * 2,\n        // Random wander direction\n        wanderSpeed: Math.random() * 0.02 + 0.01,\n        // Speed of direction changes\n        type: 'star',\n        fadePhase: Math.random() * Math.PI * 2,\n        fadeSpeed: Math.random() * 0.01 + 0.005\n      });\n    }\n\n    // Add sparkle emojis\n    for (let i = 0; i < 20; i++) {\n      game.stars.push({\n        x: (Math.random() - 0.5) * canvas.width,\n        y: (Math.random() - 0.5) * canvas.height,\n        size: Math.random() * 1 + 0.3,\n        // Smaller sparkles\n        twinkle: Math.random() * Math.PI * 2,\n        speed: Math.random() * 0.03 + 0.01,\n        moveX: (Math.random() - 0.5) * 1.2,\n        // Increased random movement\n        moveY: (Math.random() - 0.5) * 1.2,\n        wanderAngle: Math.random() * Math.PI * 2,\n        wanderSpeed: Math.random() * 0.03 + 0.01,\n        type: 'sparkle',\n        fadePhase: Math.random() * Math.PI * 2,\n        fadeSpeed: Math.random() * 0.015 + 0.008\n      });\n    }\n\n    // Add sun emojis\n    for (let i = 0; i < 12; i++) {\n      game.stars.push({\n        x: (Math.random() - 0.5) * canvas.width,\n        y: (Math.random() - 0.5) * canvas.height,\n        size: Math.random() * 1.2 + 0.4,\n        // Medium sized suns\n        twinkle: Math.random() * Math.PI * 2,\n        speed: Math.random() * 0.01 + 0.005,\n        moveX: (Math.random() - 0.5) * 0.6,\n        // Increased random movement\n        moveY: (Math.random() - 0.5) * 0.6,\n        wanderAngle: Math.random() * Math.PI * 2,\n        wanderSpeed: Math.random() * 0.015 + 0.005,\n        type: 'sun',\n        fadePhase: Math.random() * Math.PI * 2,\n        fadeSpeed: Math.random() * 0.008 + 0.003\n      });\n    }\n\n    // Add crescent moon emojis\n    for (let i = 0; i < 15; i++) {\n      game.stars.push({\n        x: (Math.random() - 0.5) * canvas.width,\n        y: (Math.random() - 0.5) * canvas.height,\n        size: Math.random() * 1.3 + 0.5,\n        // Small to medium crescents\n        twinkle: Math.random() * Math.PI * 2,\n        speed: Math.random() * 0.008 + 0.003,\n        moveX: (Math.random() - 0.5) * 0.4,\n        // Increased random movement\n        moveY: (Math.random() - 0.5) * 0.4,\n        wanderAngle: Math.random() * Math.PI * 2,\n        wanderSpeed: Math.random() * 0.01 + 0.003,\n        type: 'crescent',\n        fadePhase: Math.random() * Math.PI * 2,\n        fadeSpeed: Math.random() * 0.006 + 0.002\n      });\n    }\n\n    // Initialize cat position - start on moon surface\n    game.cat.angle = 0;\n    game.cat.distance = 280; // Increased by 2 times from 140 to 280\n    game.cat.isOnMoon = true;\n    game.cat.vx = 0;\n    game.cat.vy = 0;\n    setGameStarted(true);\n  }, []);\n\n  // Separate effect for game loop (runs when game starts)\n  useEffect(() => {\n    if (!gameStarted) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const game = gameRef.current;\n\n    // Game loop\n    function gameLoop() {\n      // Clear canvas\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Draw gradient background\n      const gradient = ctx.createLinearGradient(0, 0, 0, canvas.height);\n      gradient.addColorStop(0, 'rgb(25, 25, 60)');\n      gradient.addColorStop(1, 'rgb(10, 10, 25)');\n      ctx.fillStyle = gradient;\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n      // Center coordinate system\n      ctx.save();\n      ctx.translate(canvas.width / 2, canvas.height / 2);\n\n      // Draw twinkling stars and sparkles with random wandering\n      game.stars.forEach(star => {\n        // Update twinkle animation\n        star.twinkle += star.speed;\n        star.fadePhase += star.fadeSpeed;\n\n        // Update wandering behavior\n        star.wanderAngle += (Math.random() - 0.5) * 0.1; // Random direction changes\n\n        // Apply wandering movement\n        star.moveX += Math.cos(star.wanderAngle) * star.wanderSpeed;\n        star.moveY += Math.sin(star.wanderAngle) * star.wanderSpeed;\n\n        // Add some damping to prevent runaway speeds\n        star.moveX *= 0.98;\n        star.moveY *= 0.98;\n\n        // Limit maximum speed\n        const maxSpeed = star.type === 'sparkle' ? 1.5 : star.type === 'star' ? 1.0 : 0.8;\n        const currentSpeed = Math.sqrt(star.moveX * star.moveX + star.moveY * star.moveY);\n        if (currentSpeed > maxSpeed) {\n          star.moveX = star.moveX / currentSpeed * maxSpeed;\n          star.moveY = star.moveY / currentSpeed * maxSpeed;\n        }\n\n        // Apply movement\n        star.x += star.moveX;\n        star.y += star.moveY;\n\n        // Wrap around screen edges with some padding\n        const padding = 100;\n        if (star.x > canvas.width / 2 + padding) star.x = -canvas.width / 2 - padding;\n        if (star.x < -canvas.width / 2 - padding) star.x = canvas.width / 2 + padding;\n        if (star.y > canvas.height / 2 + padding) star.y = -canvas.height / 2 - padding;\n        if (star.y < -canvas.height / 2 - padding) star.y = canvas.height / 2 + padding;\n\n        // Occasionally change direction dramatically\n        if (Math.random() < 0.001) {\n          star.wanderAngle = Math.random() * Math.PI * 2;\n        }\n\n        // Calculate alpha with multiple fade effects - brighter twinkling\n        const twinkleAlpha = (Math.sin(star.twinkle) + 1) / 2;\n        const fadeAlpha = (Math.sin(star.fadePhase) + 1) / 2;\n        const combinedAlpha = (twinkleAlpha * 0.8 + fadeAlpha * 0.4) * 0.9 + 0.3; // Increased brightness\n\n        // Calculate size with pulsing effect\n        const sizePulse = 1 + Math.sin(star.twinkle * 2) * 0.4;\n        const size = star.size * sizePulse;\n        ctx.save();\n        ctx.globalAlpha = combinedAlpha;\n        if (star.type === 'star') {\n          // Render star emoji - brighter glow\n          ctx.shadowColor = `rgba(255, 255, 200, ${combinedAlpha})`;\n          ctx.shadowBlur = size * 6; // Increased from 4\n\n          ctx.font = `${size * 6}px Arial`;\n          ctx.textAlign = 'center';\n          ctx.textBaseline = 'middle';\n          ctx.fillText('⭐', star.x, star.y);\n        } else if (star.type === 'sparkle') {\n          // Render sparkle emoji - brighter glow\n          ctx.shadowColor = `rgba(255, 255, 255, ${combinedAlpha})`;\n          ctx.shadowBlur = size * 8; // Increased from 5\n\n          ctx.font = `${size * 8}px Arial`;\n          ctx.textAlign = 'center';\n          ctx.textBaseline = 'middle';\n\n          // Rotate sparkles for extra motion\n          ctx.save();\n          ctx.translate(star.x, star.y);\n          ctx.rotate(star.twinkle * 0.5);\n          ctx.fillText('✨', 0, 0);\n          ctx.restore();\n        } else if (star.type === 'sun') {\n          // Render sun emoji - brighter glow\n          ctx.shadowColor = `rgba(255, 220, 100, ${combinedAlpha * 0.9})`;\n          ctx.shadowBlur = size * 9; // Increased from 6\n\n          ctx.font = `${size * 7}px Arial`;\n          ctx.textAlign = 'center';\n          ctx.textBaseline = 'middle';\n\n          // Slow rotation for suns\n          ctx.save();\n          ctx.translate(star.x, star.y);\n          ctx.rotate(star.twinkle * 0.2);\n          ctx.fillText('☀️', 0, 0);\n          ctx.restore();\n        } else if (star.type === 'crescent') {\n          // Render crescent moon emoji - brighter glow\n          ctx.shadowColor = `rgba(200, 200, 255, ${combinedAlpha * 0.8})`;\n          ctx.shadowBlur = size * 7; // Increased from 5\n\n          ctx.font = `${size * 6.5}px Arial`;\n          ctx.textAlign = 'center';\n          ctx.textBaseline = 'middle';\n\n          // Very slow rotation for crescents\n          ctx.save();\n          ctx.translate(star.x, star.y);\n          ctx.rotate(star.twinkle * 0.1);\n          ctx.fillText('🌙', 0, 0);\n          ctx.restore();\n        }\n        ctx.restore();\n        ctx.shadowBlur = 0;\n      });\n\n      // Draw moon surface with craters and texture\n      const moonScale = 1 + Math.sin(Date.now() * 0.001) * 0.05;\n      const moonGlow = (Math.sin(Date.now() * 0.002) + 1) / 2 * 0.3 + 0.4;\n      ctx.save();\n      ctx.scale(moonScale, moonScale);\n\n      // Draw moon glow/atmosphere\n      ctx.shadowColor = `rgba(200, 200, 255, ${moonGlow})`;\n      ctx.shadowBlur = 40;\n\n      // Main moon surface - increased by 2 times\n      ctx.fillStyle = '#E6E6FA';\n      ctx.beginPath();\n      ctx.arc(0, 0, 100, 0, Math.PI * 2); // Increased from 50 to 100 (2x)\n      ctx.fill();\n\n      // Add darker areas for texture - scaled up by 2\n      ctx.fillStyle = 'rgba(180, 180, 200, 0.3)';\n      ctx.beginPath();\n      ctx.arc(-20, -26, 16, 0, Math.PI * 2); // Scaled up from -10, -13, 8\n      ctx.fill();\n      ctx.beginPath();\n      ctx.arc(34, 14, 24, 0, Math.PI * 2); // Scaled up from 17, 7, 12\n      ctx.fill();\n      ctx.beginPath();\n      ctx.arc(-40, 40, 14, 0, Math.PI * 2); // Scaled up from -20, 20, 7\n      ctx.fill();\n      ctx.beginPath();\n      ctx.arc(14, -46, 10, 0, Math.PI * 2); // Scaled up from 7, -23, 5\n      ctx.fill();\n\n      // Add round craters (changed from elliptical to circular) - scaled up by 2\n      ctx.fillStyle = 'rgba(120, 120, 150, 0.4)';\n      ctx.beginPath();\n      ctx.arc(-14, -14, 8, 0, Math.PI * 2); // Scaled up from -7, -7, 4\n      ctx.fill();\n      ctx.beginPath();\n      ctx.arc(26, -6, 6, 0, Math.PI * 2); // Scaled up from 13, -3, 3\n      ctx.fill();\n      ctx.beginPath();\n      ctx.arc(-34, 20, 6, 0, Math.PI * 2); // Scaled up from -17, 10, 3\n      ctx.fill();\n      ctx.beginPath();\n      ctx.arc(6, 34, 4, 0, Math.PI * 2); // Scaled up from 3, 17, 2\n      ctx.fill();\n      ctx.beginPath();\n      ctx.arc(46, -34, 4, 0, Math.PI * 2); // Scaled up from 23, -17, 2\n      ctx.fill();\n\n      // Add more round craters for better coverage - scaled up by 2\n      ctx.beginPath();\n      ctx.arc(-54, -14, 4, 0, Math.PI * 2); // Scaled up from -27, -7, 2\n      ctx.fill();\n      ctx.beginPath();\n      ctx.arc(20, 54, 6, 0, Math.PI * 2); // Scaled up from 10, 27, 3\n      ctx.fill();\n      ctx.beginPath();\n      ctx.arc(-6, 66, 2, 0, Math.PI * 2); // Scaled up from -3, 33, 1\n      ctx.fill();\n\n      // Remove the moon emoji from center - just keep the surface\n      ctx.restore();\n\n      // Draw rotating platforms\n      ctx.save();\n      ctx.rotate(game.moonRotation);\n      game.platforms.forEach((platform, index) => {\n        const x = platform.distance * Math.cos(platform.angle);\n        const y = platform.distance * Math.sin(platform.angle);\n\n        // Platform base with gradient\n        const gradient = ctx.createRadialGradient(x, y, 0, x, y, 20);\n        gradient.addColorStop(0, 'rgba(220, 220, 255, 0.9)');\n        gradient.addColorStop(1, 'rgba(180, 180, 220, 0.7)');\n        ctx.fillStyle = gradient;\n        ctx.strokeStyle = 'rgba(255, 255, 255, 0.8)';\n        ctx.lineWidth = 2;\n\n        // Main platform shape - now circular instead of elliptical\n        ctx.beginPath();\n        ctx.arc(x, y, 20, 0, Math.PI * 2); // Changed from ellipse to circular arc\n        ctx.fill();\n        ctx.stroke();\n\n        // Add platform glow effect\n        ctx.shadowColor = 'rgba(200, 200, 255, 0.6)';\n        ctx.shadowBlur = 15;\n        ctx.beginPath();\n        ctx.arc(x, y, 20, 0, Math.PI * 2); // Changed from ellipse to circular arc\n        ctx.fill();\n        ctx.shadowBlur = 0;\n\n        // Add small details/rocks on platforms - adjusted for circular shape\n        ctx.fillStyle = 'rgba(160, 160, 200, 0.8)';\n        ctx.beginPath();\n        ctx.arc(x - 6, y - 3, 2, 0, Math.PI * 2);\n        ctx.fill();\n        ctx.beginPath();\n        ctx.arc(x + 8, y + 2, 1.5, 0, Math.PI * 2);\n        ctx.fill();\n        ctx.beginPath();\n        ctx.arc(x - 2, y + 5, 1.8, 0, Math.PI * 2);\n        ctx.fill();\n        ctx.beginPath();\n        ctx.arc(x + 4, y - 6, 1.2, 0, Math.PI * 2);\n        ctx.fill();\n      });\n      ctx.restore();\n\n      // Update and draw cat\n      const cat = game.cat;\n      if (cat.isOnMoon) {\n        // Cat sticks to moon surface and rotates with it\n        const totalAngle = cat.angle + game.moonRotation;\n        cat.x = cat.distance * Math.cos(totalAngle);\n        cat.y = cat.distance * Math.sin(totalAngle);\n      } else {\n        // Cat is in flight - apply physics\n        cat.vx += 0; // No air resistance\n        cat.vy += game.gravity;\n        cat.x += cat.vx;\n        cat.y += cat.vy;\n\n        // Calculate distance from moon center\n        const distFromCenter = Math.sqrt(cat.x * cat.x + cat.y * cat.y);\n\n        // Check if cat landed back on moon surface\n        if (distFromCenter <= cat.distance + cat.r / 2 && cat.vy > 0) {\n          // Cat landed back on moon\n          cat.isOnMoon = true;\n          cat.angle = Math.atan2(cat.y, cat.x) - game.moonRotation;\n          cat.vx = 0;\n          cat.vy = 0;\n\n          // Check if landed near a platform\n          let nearPlatform = false;\n          for (let platform of game.platforms) {\n            const platformAngle = platform.angle;\n            let angleDiff = Math.abs(cat.angle - platformAngle);\n            // Handle angle wrapping\n            if (angleDiff > Math.PI) angleDiff = 2 * Math.PI - angleDiff;\n            if (angleDiff < Math.PI / 8) {\n              // Within platform range\n              nearPlatform = true;\n              setScore(prev => prev + 1);\n              break;\n            }\n          }\n        }\n\n        // Check if cat went too far from moon\n        if (distFromCenter > canvas.width / 2) {\n          // Reset cat\n          cat.angle = 0;\n          cat.isOnMoon = true;\n          cat.vx = 0;\n          cat.vy = 0;\n          setScore(0);\n        }\n      }\n\n      // Draw cat\n      ctx.fillStyle = '#38BDF8';\n      ctx.beginPath();\n      ctx.arc(cat.x, cat.y, cat.r / 2, 0, Math.PI * 2);\n      ctx.fill();\n\n      // Cat eyes\n      ctx.fillStyle = 'black';\n      ctx.beginPath();\n      ctx.arc(cat.x - 5, cat.y - 5, 2, 0, Math.PI * 2);\n      ctx.fill();\n      ctx.beginPath();\n      ctx.arc(cat.x + 5, cat.y - 5, 2, 0, Math.PI * 2);\n      ctx.fill();\n\n      // Update rotation\n      game.moonRotation += 0.002 + score * 0.0001;\n      ctx.restore();\n      game.animationId = requestAnimationFrame(gameLoop);\n    }\n\n    // Check if cat is on platform\n    function isOnPlatform() {\n      const cat = game.cat;\n      for (let platform of game.platforms) {\n        const px = platform.distance * Math.cos(platform.angle + game.moonRotation);\n        const py = platform.distance * Math.sin(platform.angle + game.moonRotation);\n        const dist = Math.sqrt((cat.x - px) ** 2 + (cat.y + cat.r / 2 - py) ** 2);\n        if (dist < cat.r && cat.vy >= 0) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    // Jump function\n    function jump() {\n      if (isOnPlatform()) {\n        game.cat.vy = game.jumpForce;\n        setScore(prev => prev + 1);\n      }\n    }\n\n    // Start game\n    gameLoop();\n\n    // Cleanup\n    return () => {\n      if (game.animationId) {\n        cancelAnimationFrame(game.animationId);\n      }\n    };\n  }, [gameStarted, score]);\n\n  // Separate effect for event handling\n  useEffect(() => {\n    if (!gameStarted) return;\n    const game = gameRef.current;\n\n    // Jump function\n    function jump() {\n      const cat = game.cat;\n      if (cat.isOnMoon) {\n        // Launch cat tangentially from moon surface\n        const totalAngle = cat.angle + game.moonRotation;\n\n        // Calculate tangent direction (perpendicular to radius)\n        const tangentAngle = totalAngle + Math.PI / 2;\n\n        // Set initial velocity in tangent direction\n        cat.vx = Math.cos(tangentAngle) * game.jumpForce;\n        cat.vy = Math.sin(tangentAngle) * game.jumpForce;\n\n        // Cat is now in flight\n        cat.isOnMoon = false;\n      }\n    }\n\n    // Event listeners\n    function handleKeyDown(e) {\n      if (e.code === 'Space' || e.code === 'ArrowUp') {\n        e.preventDefault();\n        jump();\n      }\n    }\n    function handleClick(e) {\n      e.preventDefault();\n      jump();\n    }\n    window.addEventListener('keydown', handleKeyDown);\n    window.addEventListener('click', handleClick);\n\n    // Cleanup\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n      window.removeEventListener('click', handleClick);\n    };\n  }, [gameStarted]);\n  const gameContainerStyle = {\n    position: 'relative',\n    width: '100vw',\n    height: '100vh',\n    background: 'linear-gradient(135deg, #1a1a3a 0%, #0f0f1f 100%)',\n    overflow: 'hidden',\n    fontFamily: 'Arial, sans-serif'\n  };\n  const canvasStyle = {\n    display: 'block',\n    cursor: 'pointer'\n  };\n  const scoreStyle = {\n    position: 'absolute',\n    top: '20px',\n    left: '20px',\n    color: '#fff8aa',\n    fontSize: '24px',\n    fontWeight: 'bold',\n    zIndex: 10\n  };\n  const instructionsStyle = {\n    position: 'absolute',\n    bottom: '20px',\n    left: '50%',\n    transform: 'translateX(-50%)',\n    color: 'white',\n    textAlign: 'center',\n    fontSize: '16px'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: gameContainerStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: canvasStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: scoreStyle,\n      children: [\"Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: instructionsStyle,\n      children: \"Stick to the moon and jump to land near platforms! Press SPACEBAR, \\u2191 or CLICK to jump!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 588,\n    columnNumber: 9\n  }, this);\n};\n_s(MoonJumperGame, \"EEnRNd15JF3UKpBHQiocvRrtKM0=\");\n_c = MoonJumperGame;\nexport default MoonJumperGame;\nvar _c;\n$RefreshReg$(_c, \"MoonJumperGame\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","MoonJumperGame","_s","canvasRef","score","setScore","gameStarted","setGameStarted","gameRef","ball","angle","distance","x","y","vx","vy","r","isOnMoon","platforms","stars","moonRotation","gravity","jumpForce","animationId","canvas","current","ctx","getContext","width","window","innerWidth","height","innerHeight","game","i","push","Math","PI","random","size","twinkle","speed","moveX","moveY","wanderAngle","wanderSpeed","type","fadePhase","fadeSpeed","cat","gameLoop","clearRect","gradient","createLinearGradient","addColorStop","fillStyle","fillRect","save","translate","forEach","star","cos","sin","maxSpeed","currentSpeed","sqrt","padding","twinkleAlpha","fadeAlpha","combinedAlpha","sizePulse","globalAlpha","shadowColor","shadowBlur","font","textAlign","textBaseline","fillText","rotate","restore","moonScale","Date","now","moonGlow","scale","beginPath","arc","fill","platform","index","createRadialGradient","strokeStyle","lineWidth","stroke","totalAngle","distFromCenter","atan2","nearPlatform","platformAngle","angleDiff","abs","prev","requestAnimationFrame","isOnPlatform","px","py","dist","jump","cancelAnimationFrame","tangentAngle","handleKeyDown","e","code","preventDefault","handleClick","addEventListener","removeEventListener","gameContainerStyle","position","background","overflow","fontFamily","canvasStyle","display","cursor","scoreStyle","top","left","color","fontSize","fontWeight","zIndex","instructionsStyle","bottom","transform","style","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/workspaces/MoonDustOdyssey/src/MoonJumperGame.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nconst MoonJumperGame = () => {\n    const canvasRef = useRef(null);\n    const [score, setScore] = useState(0);\n    const [gameStarted, setGameStarted] = useState(false);\n    const gameRef = useRef({\n        ball: { \n            angle: 0,           // Angle on moon surface\n            distance: 140,      // Distance from moon center (decreased by half from 280 to 140)\n            x: 0, y: 0,         // Cartesian coordinates\n            vx: 0, vy: 0,       // Velocity when jumping\n            r: 30,              // Radius\n            isOnMoon: true      // Whether ball is on moon surface\n        },\n        platforms: [],\n        stars: [],\n        moonRotation: 0,\n        gravity: 0.4,\n        jumpForce: 8,\n        animationId: null\n    });\n\n    // Separate effect for initializing the game (runs once)\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        if (!canvas) return;\n        \n        const ctx = canvas.getContext('2d');\n        \n        // Set canvas size\n        canvas.width = window.innerWidth;\n        canvas.height = window.innerHeight;\n        \n        // Initialize game objects\n        const game = gameRef.current;\n        \n        // Create platforms\n        game.platforms = [];\n        for (let i = 0; i < 8; i++) {\n            game.platforms.push({\n                angle: i * (Math.PI / 4),\n                distance: 280 // Increased by 2 times from 140 to 280\n            });\n        }\n        \n        // Create stars and sparkles\n        game.stars = [];\n        for (let i = 0; i < 25; i++) {\n            game.stars.push({\n                x: (Math.random() - 0.5) * canvas.width,\n                y: (Math.random() - 0.5) * canvas.height,\n                size: Math.random() * 1.5 + 0.5, // Smaller stars\n                twinkle: Math.random() * Math.PI * 2,\n                speed: Math.random() * 0.02 + 0.01,\n                moveX: (Math.random() - 0.5) * 0.8, // Increased random movement\n                moveY: (Math.random() - 0.5) * 0.8,\n                wanderAngle: Math.random() * Math.PI * 2, // Random wander direction\n                wanderSpeed: Math.random() * 0.02 + 0.01, // Speed of direction changes\n                type: 'star',\n                fadePhase: Math.random() * Math.PI * 2,\n                fadeSpeed: Math.random() * 0.01 + 0.005\n            });\n        }\n        \n        // Add sparkle emojis\n        for (let i = 0; i < 20; i++) {\n            game.stars.push({\n                x: (Math.random() - 0.5) * canvas.width,\n                y: (Math.random() - 0.5) * canvas.height,\n                size: Math.random() * 1 + 0.3, // Smaller sparkles\n                twinkle: Math.random() * Math.PI * 2,\n                speed: Math.random() * 0.03 + 0.01,\n                moveX: (Math.random() - 0.5) * 1.2, // Increased random movement\n                moveY: (Math.random() - 0.5) * 1.2,\n                wanderAngle: Math.random() * Math.PI * 2,\n                wanderSpeed: Math.random() * 0.03 + 0.01,\n                type: 'sparkle',\n                fadePhase: Math.random() * Math.PI * 2,\n                fadeSpeed: Math.random() * 0.015 + 0.008\n            });\n        }\n        \n        // Add sun emojis\n        for (let i = 0; i < 12; i++) {\n            game.stars.push({\n                x: (Math.random() - 0.5) * canvas.width,\n                y: (Math.random() - 0.5) * canvas.height,\n                size: Math.random() * 1.2 + 0.4, // Medium sized suns\n                twinkle: Math.random() * Math.PI * 2,\n                speed: Math.random() * 0.01 + 0.005,\n                moveX: (Math.random() - 0.5) * 0.6, // Increased random movement\n                moveY: (Math.random() - 0.5) * 0.6,\n                wanderAngle: Math.random() * Math.PI * 2,\n                wanderSpeed: Math.random() * 0.015 + 0.005,\n                type: 'sun',\n                fadePhase: Math.random() * Math.PI * 2,\n                fadeSpeed: Math.random() * 0.008 + 0.003\n            });\n        }\n        \n        // Add crescent moon emojis\n        for (let i = 0; i < 15; i++) {\n            game.stars.push({\n                x: (Math.random() - 0.5) * canvas.width,\n                y: (Math.random() - 0.5) * canvas.height,\n                size: Math.random() * 1.3 + 0.5, // Small to medium crescents\n                twinkle: Math.random() * Math.PI * 2,\n                speed: Math.random() * 0.008 + 0.003,\n                moveX: (Math.random() - 0.5) * 0.4, // Increased random movement\n                moveY: (Math.random() - 0.5) * 0.4,\n                wanderAngle: Math.random() * Math.PI * 2,\n                wanderSpeed: Math.random() * 0.01 + 0.003,\n                type: 'crescent',\n                fadePhase: Math.random() * Math.PI * 2,\n                fadeSpeed: Math.random() * 0.006 + 0.002\n            });\n        }\n\n        // Initialize cat position - start on moon surface\n        game.cat.angle = 0;\n        game.cat.distance = 280; // Increased by 2 times from 140 to 280\n        game.cat.isOnMoon = true;\n        game.cat.vx = 0;\n        game.cat.vy = 0;\n        \n        setGameStarted(true);\n    }, []);\n\n    // Separate effect for game loop (runs when game starts)\n    useEffect(() => {\n        if (!gameStarted) return;\n        \n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        const game = gameRef.current;\n        \n        \n        // Game loop\n        function gameLoop() {\n            // Clear canvas\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n            \n            // Draw gradient background\n            const gradient = ctx.createLinearGradient(0, 0, 0, canvas.height);\n            gradient.addColorStop(0, 'rgb(25, 25, 60)');\n            gradient.addColorStop(1, 'rgb(10, 10, 25)');\n            ctx.fillStyle = gradient;\n            ctx.fillRect(0, 0, canvas.width, canvas.height);\n            \n            // Center coordinate system\n            ctx.save();\n            ctx.translate(canvas.width / 2, canvas.height / 2);\n            \n            // Draw twinkling stars and sparkles with random wandering\n            game.stars.forEach(star => {\n                // Update twinkle animation\n                star.twinkle += star.speed;\n                star.fadePhase += star.fadeSpeed;\n                \n                // Update wandering behavior\n                star.wanderAngle += (Math.random() - 0.5) * 0.1; // Random direction changes\n                \n                // Apply wandering movement\n                star.moveX += Math.cos(star.wanderAngle) * star.wanderSpeed;\n                star.moveY += Math.sin(star.wanderAngle) * star.wanderSpeed;\n                \n                // Add some damping to prevent runaway speeds\n                star.moveX *= 0.98;\n                star.moveY *= 0.98;\n                \n                // Limit maximum speed\n                const maxSpeed = star.type === 'sparkle' ? 1.5 : star.type === 'star' ? 1.0 : 0.8;\n                const currentSpeed = Math.sqrt(star.moveX * star.moveX + star.moveY * star.moveY);\n                if (currentSpeed > maxSpeed) {\n                    star.moveX = (star.moveX / currentSpeed) * maxSpeed;\n                    star.moveY = (star.moveY / currentSpeed) * maxSpeed;\n                }\n                \n                // Apply movement\n                star.x += star.moveX;\n                star.y += star.moveY;\n                \n                // Wrap around screen edges with some padding\n                const padding = 100;\n                if (star.x > canvas.width / 2 + padding) star.x = -canvas.width / 2 - padding;\n                if (star.x < -canvas.width / 2 - padding) star.x = canvas.width / 2 + padding;\n                if (star.y > canvas.height / 2 + padding) star.y = -canvas.height / 2 - padding;\n                if (star.y < -canvas.height / 2 - padding) star.y = canvas.height / 2 + padding;\n                \n                // Occasionally change direction dramatically\n                if (Math.random() < 0.001) {\n                    star.wanderAngle = Math.random() * Math.PI * 2;\n                }\n                \n                // Calculate alpha with multiple fade effects - brighter twinkling\n                const twinkleAlpha = (Math.sin(star.twinkle) + 1) / 2;\n                const fadeAlpha = (Math.sin(star.fadePhase) + 1) / 2;\n                const combinedAlpha = (twinkleAlpha * 0.8 + fadeAlpha * 0.4) * 0.9 + 0.3; // Increased brightness\n                \n                // Calculate size with pulsing effect\n                const sizePulse = 1 + Math.sin(star.twinkle * 2) * 0.4;\n                const size = star.size * sizePulse;\n                \n                ctx.save();\n                ctx.globalAlpha = combinedAlpha;\n                \n                if (star.type === 'star') {\n                    // Render star emoji - brighter glow\n                    ctx.shadowColor = `rgba(255, 255, 200, ${combinedAlpha})`;\n                    ctx.shadowBlur = size * 6; // Increased from 4\n                    \n                    ctx.font = `${size * 6}px Arial`;\n                    ctx.textAlign = 'center';\n                    ctx.textBaseline = 'middle';\n                    ctx.fillText('⭐', star.x, star.y);\n                } else if (star.type === 'sparkle') {\n                    // Render sparkle emoji - brighter glow\n                    ctx.shadowColor = `rgba(255, 255, 255, ${combinedAlpha})`;\n                    ctx.shadowBlur = size * 8; // Increased from 5\n                    \n                    ctx.font = `${size * 8}px Arial`;\n                    ctx.textAlign = 'center';\n                    ctx.textBaseline = 'middle';\n                    \n                    // Rotate sparkles for extra motion\n                    ctx.save();\n                    ctx.translate(star.x, star.y);\n                    ctx.rotate(star.twinkle * 0.5);\n                    ctx.fillText('✨', 0, 0);\n                    ctx.restore();\n                } else if (star.type === 'sun') {\n                    // Render sun emoji - brighter glow\n                    ctx.shadowColor = `rgba(255, 220, 100, ${combinedAlpha * 0.9})`;\n                    ctx.shadowBlur = size * 9; // Increased from 6\n                    \n                    ctx.font = `${size * 7}px Arial`;\n                    ctx.textAlign = 'center';\n                    ctx.textBaseline = 'middle';\n                    \n                    // Slow rotation for suns\n                    ctx.save();\n                    ctx.translate(star.x, star.y);\n                    ctx.rotate(star.twinkle * 0.2);\n                    ctx.fillText('☀️', 0, 0);\n                    ctx.restore();\n                } else if (star.type === 'crescent') {\n                    // Render crescent moon emoji - brighter glow\n                    ctx.shadowColor = `rgba(200, 200, 255, ${combinedAlpha * 0.8})`;\n                    ctx.shadowBlur = size * 7; // Increased from 5\n                    \n                    ctx.font = `${size * 6.5}px Arial`;\n                    ctx.textAlign = 'center';\n                    ctx.textBaseline = 'middle';\n                    \n                    // Very slow rotation for crescents\n                    ctx.save();\n                    ctx.translate(star.x, star.y);\n                    ctx.rotate(star.twinkle * 0.1);\n                    ctx.fillText('🌙', 0, 0);\n                    ctx.restore();\n                }\n                \n                ctx.restore();\n                ctx.shadowBlur = 0;\n            });\n            \n            // Draw moon surface with craters and texture\n            const moonScale = 1 + Math.sin(Date.now() * 0.001) * 0.05;\n            const moonGlow = (Math.sin(Date.now() * 0.002) + 1) / 2 * 0.3 + 0.4;\n            \n            ctx.save();\n            ctx.scale(moonScale, moonScale);\n            \n            // Draw moon glow/atmosphere\n            ctx.shadowColor = `rgba(200, 200, 255, ${moonGlow})`;\n            ctx.shadowBlur = 40;\n            \n            // Main moon surface - increased by 2 times\n            ctx.fillStyle = '#E6E6FA';\n            ctx.beginPath();\n            ctx.arc(0, 0, 100, 0, Math.PI * 2); // Increased from 50 to 100 (2x)\n            ctx.fill();\n            \n            // Add darker areas for texture - scaled up by 2\n            ctx.fillStyle = 'rgba(180, 180, 200, 0.3)';\n            ctx.beginPath();\n            ctx.arc(-20, -26, 16, 0, Math.PI * 2); // Scaled up from -10, -13, 8\n            ctx.fill();\n            \n            ctx.beginPath();\n            ctx.arc(34, 14, 24, 0, Math.PI * 2); // Scaled up from 17, 7, 12\n            ctx.fill();\n            \n            ctx.beginPath();\n            ctx.arc(-40, 40, 14, 0, Math.PI * 2); // Scaled up from -20, 20, 7\n            ctx.fill();\n            \n            ctx.beginPath();\n            ctx.arc(14, -46, 10, 0, Math.PI * 2); // Scaled up from 7, -23, 5\n            ctx.fill();\n            \n            // Add round craters (changed from elliptical to circular) - scaled up by 2\n            ctx.fillStyle = 'rgba(120, 120, 150, 0.4)';\n            ctx.beginPath();\n            ctx.arc(-14, -14, 8, 0, Math.PI * 2); // Scaled up from -7, -7, 4\n            ctx.fill();\n            \n            ctx.beginPath();\n            ctx.arc(26, -6, 6, 0, Math.PI * 2); // Scaled up from 13, -3, 3\n            ctx.fill();\n            \n            ctx.beginPath();\n            ctx.arc(-34, 20, 6, 0, Math.PI * 2); // Scaled up from -17, 10, 3\n            ctx.fill();\n            \n            ctx.beginPath();\n            ctx.arc(6, 34, 4, 0, Math.PI * 2); // Scaled up from 3, 17, 2\n            ctx.fill();\n            \n            ctx.beginPath();\n            ctx.arc(46, -34, 4, 0, Math.PI * 2); // Scaled up from 23, -17, 2\n            ctx.fill();\n            \n            // Add more round craters for better coverage - scaled up by 2\n            ctx.beginPath();\n            ctx.arc(-54, -14, 4, 0, Math.PI * 2); // Scaled up from -27, -7, 2\n            ctx.fill();\n            \n            ctx.beginPath();\n            ctx.arc(20, 54, 6, 0, Math.PI * 2); // Scaled up from 10, 27, 3\n            ctx.fill();\n            \n            ctx.beginPath();\n            ctx.arc(-6, 66, 2, 0, Math.PI * 2); // Scaled up from -3, 33, 1\n            ctx.fill();\n            \n            // Remove the moon emoji from center - just keep the surface\n            ctx.restore();\n            \n            // Draw rotating platforms\n            ctx.save();\n            ctx.rotate(game.moonRotation);\n            \n            game.platforms.forEach((platform, index) => {\n                const x = platform.distance * Math.cos(platform.angle);\n                const y = platform.distance * Math.sin(platform.angle);\n                \n                // Platform base with gradient\n                const gradient = ctx.createRadialGradient(x, y, 0, x, y, 20);\n                gradient.addColorStop(0, 'rgba(220, 220, 255, 0.9)');\n                gradient.addColorStop(1, 'rgba(180, 180, 220, 0.7)');\n                \n                ctx.fillStyle = gradient;\n                ctx.strokeStyle = 'rgba(255, 255, 255, 0.8)';\n                ctx.lineWidth = 2;\n                \n                // Main platform shape - now circular instead of elliptical\n                ctx.beginPath();\n                ctx.arc(x, y, 20, 0, Math.PI * 2); // Changed from ellipse to circular arc\n                ctx.fill();\n                ctx.stroke();\n                \n                // Add platform glow effect\n                ctx.shadowColor = 'rgba(200, 200, 255, 0.6)';\n                ctx.shadowBlur = 15;\n                ctx.beginPath();\n                ctx.arc(x, y, 20, 0, Math.PI * 2); // Changed from ellipse to circular arc\n                ctx.fill();\n                ctx.shadowBlur = 0;\n                \n                // Add small details/rocks on platforms - adjusted for circular shape\n                ctx.fillStyle = 'rgba(160, 160, 200, 0.8)';\n                ctx.beginPath();\n                ctx.arc(x - 6, y - 3, 2, 0, Math.PI * 2);\n                ctx.fill();\n                \n                ctx.beginPath();\n                ctx.arc(x + 8, y + 2, 1.5, 0, Math.PI * 2);\n                ctx.fill();\n                \n                ctx.beginPath();\n                ctx.arc(x - 2, y + 5, 1.8, 0, Math.PI * 2);\n                ctx.fill();\n                \n                ctx.beginPath();\n                ctx.arc(x + 4, y - 6, 1.2, 0, Math.PI * 2);\n                ctx.fill();\n            });\n            \n            ctx.restore();\n            \n            // Update and draw cat\n            const cat = game.cat;\n            \n            if (cat.isOnMoon) {\n                // Cat sticks to moon surface and rotates with it\n                const totalAngle = cat.angle + game.moonRotation;\n                cat.x = cat.distance * Math.cos(totalAngle);\n                cat.y = cat.distance * Math.sin(totalAngle);\n            } else {\n                // Cat is in flight - apply physics\n                cat.vx += 0; // No air resistance\n                cat.vy += game.gravity;\n                cat.x += cat.vx;\n                cat.y += cat.vy;\n                \n                // Calculate distance from moon center\n                const distFromCenter = Math.sqrt(cat.x * cat.x + cat.y * cat.y);\n                \n                // Check if cat landed back on moon surface\n                if (distFromCenter <= cat.distance + cat.r / 2 && cat.vy > 0) {\n                    // Cat landed back on moon\n                    cat.isOnMoon = true;\n                    cat.angle = Math.atan2(cat.y, cat.x) - game.moonRotation;\n                    cat.vx = 0;\n                    cat.vy = 0;\n                    \n                    // Check if landed near a platform\n                    let nearPlatform = false;\n                    for (let platform of game.platforms) {\n                        const platformAngle = platform.angle;\n                        let angleDiff = Math.abs(cat.angle - platformAngle);\n                        // Handle angle wrapping\n                        if (angleDiff > Math.PI) angleDiff = 2 * Math.PI - angleDiff;\n                        \n                        if (angleDiff < Math.PI / 8) { // Within platform range\n                            nearPlatform = true;\n                            setScore(prev => prev + 1);\n                            break;\n                        }\n                    }\n                }\n                \n                // Check if cat went too far from moon\n                if (distFromCenter > canvas.width / 2) {\n                    // Reset cat\n                    cat.angle = 0;\n                    cat.isOnMoon = true;\n                    cat.vx = 0;\n                    cat.vy = 0;\n                    setScore(0);\n                }\n            }\n            \n            // Draw cat\n            ctx.fillStyle = '#38BDF8';\n            ctx.beginPath();\n            ctx.arc(cat.x, cat.y, cat.r / 2, 0, Math.PI * 2);\n            ctx.fill();\n            \n            // Cat eyes\n            ctx.fillStyle = 'black';\n            ctx.beginPath();\n            ctx.arc(cat.x - 5, cat.y - 5, 2, 0, Math.PI * 2);\n            ctx.fill();\n            ctx.beginPath();\n            ctx.arc(cat.x + 5, cat.y - 5, 2, 0, Math.PI * 2);\n            ctx.fill();\n            \n            // Update rotation\n            game.moonRotation += 0.002 + score * 0.0001;\n            \n            ctx.restore();\n            \n            game.animationId = requestAnimationFrame(gameLoop);\n        }\n        \n        // Check if cat is on platform\n        function isOnPlatform() {\n            const cat = game.cat;\n            \n            for (let platform of game.platforms) {\n                const px = platform.distance * Math.cos(platform.angle + game.moonRotation);\n                const py = platform.distance * Math.sin(platform.angle + game.moonRotation);\n                const dist = Math.sqrt((cat.x - px) ** 2 + ((cat.y + cat.r / 2) - py) ** 2);\n                \n                if (dist < cat.r && cat.vy >= 0) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        \n        // Jump function\n        function jump() {\n            if (isOnPlatform()) {\n                game.cat.vy = game.jumpForce;\n                setScore(prev => prev + 1);\n            }\n        }\n        \n        // Start game\n        gameLoop();\n        \n        // Cleanup\n        return () => {\n            if (game.animationId) {\n                cancelAnimationFrame(game.animationId);\n            }\n        };\n    }, [gameStarted, score]);\n\n    // Separate effect for event handling\n    useEffect(() => {\n        if (!gameStarted) return;\n        \n        const game = gameRef.current;\n        \n        // Jump function\n        function jump() {\n            const cat = game.cat;\n            \n            if (cat.isOnMoon) {\n                // Launch cat tangentially from moon surface\n                const totalAngle = cat.angle + game.moonRotation;\n                \n                // Calculate tangent direction (perpendicular to radius)\n                const tangentAngle = totalAngle + Math.PI / 2;\n                \n                // Set initial velocity in tangent direction\n                cat.vx = Math.cos(tangentAngle) * game.jumpForce;\n                cat.vy = Math.sin(tangentAngle) * game.jumpForce;\n                \n                // Cat is now in flight\n                cat.isOnMoon = false;\n            }\n        }\n        \n        // Event listeners\n        function handleKeyDown(e) {\n            if (e.code === 'Space' || e.code === 'ArrowUp') {\n                e.preventDefault();\n                jump();\n            }\n        }\n        \n        function handleClick(e) {\n            e.preventDefault();\n            jump();\n        }\n        \n        window.addEventListener('keydown', handleKeyDown);\n        window.addEventListener('click', handleClick);\n        \n        // Cleanup\n        return () => {\n            window.removeEventListener('keydown', handleKeyDown);\n            window.removeEventListener('click', handleClick);\n        };\n    }, [gameStarted]);\n\n    const gameContainerStyle = {\n        position: 'relative',\n        width: '100vw',\n        height: '100vh',\n        background: 'linear-gradient(135deg, #1a1a3a 0%, #0f0f1f 100%)',\n        overflow: 'hidden',\n        fontFamily: 'Arial, sans-serif'\n    };\n\n    const canvasStyle = {\n        display: 'block',\n        cursor: 'pointer'\n    };\n\n    const scoreStyle = {\n        position: 'absolute',\n        top: '20px',\n        left: '20px',\n        color: '#fff8aa',\n        fontSize: '24px',\n        fontWeight: 'bold',\n        zIndex: 10\n    };\n\n    const instructionsStyle = {\n        position: 'absolute',\n        bottom: '20px',\n        left: '50%',\n        transform: 'translateX(-50%)',\n        color: 'white',\n        textAlign: 'center',\n        fontSize: '16px'\n    };\n\n    return (\n        <div style={gameContainerStyle}>\n            <canvas ref={canvasRef} style={canvasStyle} />\n            <div style={scoreStyle}>Score: {score}</div>\n            <div style={instructionsStyle}>\n                Stick to the moon and jump to land near platforms! Press SPACEBAR, ↑ or CLICK to jump!\n            </div>\n        </div>\n    );\n};\n\nexport default MoonJumperGame;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}